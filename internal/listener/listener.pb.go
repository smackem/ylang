// Code generated by protoc-gen-go. DO NOT EDIT.
// source: listener.proto

package listener

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProcessImageResponse_CompilationResult int32

const (
	ProcessImageResponse_UNDEFINED ProcessImageResponse_CompilationResult = 0
	ProcessImageResponse_OK        ProcessImageResponse_CompilationResult = 1
	ProcessImageResponse_ERROR     ProcessImageResponse_CompilationResult = 2
)

var ProcessImageResponse_CompilationResult_name = map[int32]string{
	0: "UNDEFINED",
	1: "OK",
	2: "ERROR",
}

var ProcessImageResponse_CompilationResult_value = map[string]int32{
	"UNDEFINED": 0,
	"OK":        1,
	"ERROR":     2,
}

func (x ProcessImageResponse_CompilationResult) String() string {
	return proto.EnumName(ProcessImageResponse_CompilationResult_name, int32(x))
}

func (ProcessImageResponse_CompilationResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f75aade3a9f7de9c, []int{2, 0}
}

type SimpleMsg struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleMsg) Reset()         { *m = SimpleMsg{} }
func (m *SimpleMsg) String() string { return proto.CompactTextString(m) }
func (*SimpleMsg) ProtoMessage()    {}
func (*SimpleMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f75aade3a9f7de9c, []int{0}
}

func (m *SimpleMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMsg.Unmarshal(m, b)
}
func (m *SimpleMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMsg.Marshal(b, m, deterministic)
}
func (m *SimpleMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMsg.Merge(m, src)
}
func (m *SimpleMsg) XXX_Size() int {
	return xxx_messageInfo_SimpleMsg.Size(m)
}
func (m *SimpleMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMsg proto.InternalMessageInfo

func (m *SimpleMsg) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type ProcessImageRequest struct {
	SourceCode           string   `protobuf:"bytes,1,opt,name=sourceCode,proto3" json:"sourceCode,omitempty"`
	ImageDataPng         []byte   `protobuf:"bytes,2,opt,name=imageDataPng,proto3" json:"imageDataPng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessImageRequest) Reset()         { *m = ProcessImageRequest{} }
func (m *ProcessImageRequest) String() string { return proto.CompactTextString(m) }
func (*ProcessImageRequest) ProtoMessage()    {}
func (*ProcessImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f75aade3a9f7de9c, []int{1}
}

func (m *ProcessImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessImageRequest.Unmarshal(m, b)
}
func (m *ProcessImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessImageRequest.Marshal(b, m, deterministic)
}
func (m *ProcessImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessImageRequest.Merge(m, src)
}
func (m *ProcessImageRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessImageRequest.Size(m)
}
func (m *ProcessImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessImageRequest proto.InternalMessageInfo

func (m *ProcessImageRequest) GetSourceCode() string {
	if m != nil {
		return m.SourceCode
	}
	return ""
}

func (m *ProcessImageRequest) GetImageDataPng() []byte {
	if m != nil {
		return m.ImageDataPng
	}
	return nil
}

type ProcessImageResponse struct {
	Result               ProcessImageResponse_CompilationResult `protobuf:"varint,1,opt,name=result,proto3,enum=listener.ProcessImageResponse_CompilationResult" json:"result,omitempty"`
	Message              string                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ImageDataPng         []byte                                 `protobuf:"bytes,3,opt,name=imageDataPng,proto3" json:"imageDataPng,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ProcessImageResponse) Reset()         { *m = ProcessImageResponse{} }
func (m *ProcessImageResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessImageResponse) ProtoMessage()    {}
func (*ProcessImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f75aade3a9f7de9c, []int{2}
}

func (m *ProcessImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessImageResponse.Unmarshal(m, b)
}
func (m *ProcessImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessImageResponse.Marshal(b, m, deterministic)
}
func (m *ProcessImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessImageResponse.Merge(m, src)
}
func (m *ProcessImageResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessImageResponse.Size(m)
}
func (m *ProcessImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessImageResponse proto.InternalMessageInfo

func (m *ProcessImageResponse) GetResult() ProcessImageResponse_CompilationResult {
	if m != nil {
		return m.Result
	}
	return ProcessImageResponse_UNDEFINED
}

func (m *ProcessImageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProcessImageResponse) GetImageDataPng() []byte {
	if m != nil {
		return m.ImageDataPng
	}
	return nil
}

func init() {
	proto.RegisterEnum("listener.ProcessImageResponse_CompilationResult", ProcessImageResponse_CompilationResult_name, ProcessImageResponse_CompilationResult_value)
	proto.RegisterType((*SimpleMsg)(nil), "listener.SimpleMsg")
	proto.RegisterType((*ProcessImageRequest)(nil), "listener.ProcessImageRequest")
	proto.RegisterType((*ProcessImageResponse)(nil), "listener.ProcessImageResponse")
}

func init() { proto.RegisterFile("listener.proto", fileDescriptor_f75aade3a9f7de9c) }

var fileDescriptor_f75aade3a9f7de9c = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x29, 0x2a, 0xd2, 0x11, 0x09, 0x0e, 0x1e, 0x08, 0x89, 0x48, 0x7a, 0xc2, 0x4b, 0x63,
	0x30, 0xfa, 0x00, 0xfc, 0x31, 0x10, 0x15, 0xc8, 0x12, 0x0f, 0x1c, 0x57, 0x9c, 0x34, 0x8d, 0xdb,
	0xdd, 0xda, 0x59, 0x12, 0x79, 0x0f, 0x5f, 0xcd, 0xf7, 0x31, 0x54, 0x40, 0x08, 0xe8, 0x6d, 0xe7,
	0xcb, 0xf7, 0x4d, 0x7e, 0xb3, 0x33, 0x50, 0x54, 0x21, 0x5b, 0xd2, 0x94, 0xf8, 0x71, 0x62, 0xac,
	0xc1, 0xfc, 0xaa, 0xf6, 0x2e, 0xc1, 0x1d, 0x87, 0x51, 0xac, 0xe8, 0x89, 0x03, 0x44, 0x38, 0xb4,
	0xf4, 0x61, 0x2b, 0x4e, 0xdd, 0x69, 0xb8, 0x22, 0x7d, 0x7b, 0x13, 0x28, 0x8f, 0x12, 0x33, 0x25,
	0xe6, 0x7e, 0x24, 0x03, 0x12, 0xf4, 0x3e, 0x23, 0xb6, 0x58, 0x03, 0x60, 0x33, 0x4b, 0xa6, 0xd4,
	0x36, 0xaf, 0xb4, 0x0c, 0x6c, 0x28, 0xe8, 0x41, 0x21, 0x5c, 0xf8, 0x3b, 0xd2, 0xca, 0x91, 0x0e,
	0x2a, 0xd9, 0xba, 0xd3, 0x28, 0x88, 0x2d, 0xcd, 0xfb, 0x72, 0xe0, 0x7c, 0xbb, 0x37, 0xc7, 0x46,
	0x33, 0x61, 0x0f, 0x72, 0x09, 0xf1, 0x4c, 0xfd, 0x90, 0x14, 0x9b, 0xd7, 0xfe, 0x9a, 0x7f, 0x9f,
	0xdf, 0x6f, 0x9b, 0x28, 0x0e, 0x95, 0xb4, 0xa1, 0xd1, 0x22, 0xcd, 0x89, 0x65, 0x1e, 0x2b, 0x70,
	0x1c, 0x11, 0xb3, 0x0c, 0x28, 0x25, 0x70, 0xc5, 0xaa, 0xdc, 0x01, 0x3c, 0xd8, 0x03, 0x78, 0x0b,
	0x67, 0x3b, 0xad, 0xf1, 0x14, 0xdc, 0xe7, 0x41, 0xa7, 0x7b, 0xdf, 0x1f, 0x74, 0x3b, 0xa5, 0x0c,
	0xe6, 0x20, 0x3b, 0x7c, 0x28, 0x39, 0xe8, 0xc2, 0x51, 0x57, 0x88, 0xa1, 0x28, 0x65, 0x9b, 0x9f,
	0x0e, 0xb8, 0x29, 0xe0, 0x02, 0x16, 0x87, 0x50, 0xd8, 0x84, 0xc6, 0x8b, 0xbf, 0x86, 0x49, 0x3f,
	0xb6, 0x5a, 0xfb, 0x7f, 0x56, 0x2f, 0x83, 0x77, 0x90, 0x1f, 0xcb, 0x79, 0x8f, 0x94, 0x32, 0x58,
	0xfe, 0x75, 0xaf, 0xd7, 0x58, 0xdd, 0x27, 0x7a, 0x99, 0xd6, 0x15, 0x54, 0x35, 0x59, 0x9f, 0x23,
	0x39, 0x7d, 0xa3, 0xc8, 0x9f, 0x2b, 0xa9, 0x83, 0xb5, 0xb3, 0x75, 0x32, 0x79, 0x94, 0x3a, 0x18,
	0x2d, 0xce, 0x83, 0x5f, 0x72, 0xe9, 0x99, 0xdc, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0x86, 0x15,
	0x8c, 0x50, 0x38, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImageProcClient is the client API for ImageProc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageProcClient interface {
	ProcessImage(ctx context.Context, in *ProcessImageRequest, opts ...grpc.CallOption) (*ProcessImageResponse, error)
	SayHello(ctx context.Context, in *SimpleMsg, opts ...grpc.CallOption) (*SimpleMsg, error)
}

type imageProcClient struct {
	cc *grpc.ClientConn
}

func NewImageProcClient(cc *grpc.ClientConn) ImageProcClient {
	return &imageProcClient{cc}
}

func (c *imageProcClient) ProcessImage(ctx context.Context, in *ProcessImageRequest, opts ...grpc.CallOption) (*ProcessImageResponse, error) {
	out := new(ProcessImageResponse)
	err := c.cc.Invoke(ctx, "/listener.ImageProc/ProcessImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageProcClient) SayHello(ctx context.Context, in *SimpleMsg, opts ...grpc.CallOption) (*SimpleMsg, error) {
	out := new(SimpleMsg)
	err := c.cc.Invoke(ctx, "/listener.ImageProc/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageProcServer is the server API for ImageProc service.
type ImageProcServer interface {
	ProcessImage(context.Context, *ProcessImageRequest) (*ProcessImageResponse, error)
	SayHello(context.Context, *SimpleMsg) (*SimpleMsg, error)
}

// UnimplementedImageProcServer can be embedded to have forward compatible implementations.
type UnimplementedImageProcServer struct {
}

func (*UnimplementedImageProcServer) ProcessImage(ctx context.Context, req *ProcessImageRequest) (*ProcessImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessImage not implemented")
}
func (*UnimplementedImageProcServer) SayHello(ctx context.Context, req *SimpleMsg) (*SimpleMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterImageProcServer(s *grpc.Server, srv ImageProcServer) {
	s.RegisterService(&_ImageProc_serviceDesc, srv)
}

func _ImageProc_ProcessImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageProcServer).ProcessImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/listener.ImageProc/ProcessImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageProcServer).ProcessImage(ctx, req.(*ProcessImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageProc_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageProcServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/listener.ImageProc/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageProcServer).SayHello(ctx, req.(*SimpleMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageProc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "listener.ImageProc",
	HandlerType: (*ImageProcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessImage",
			Handler:    _ImageProc_ProcessImage_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _ImageProc_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "listener.proto",
}
