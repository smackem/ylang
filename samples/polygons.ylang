//poly := polygon(200;300, 410;280, 620;310, 400;150, 545;110)
poly := polygon(0;0, Bounds.width;0, Bounds.width;Bounds.height, 0;Bounds.height)
roberts1 := | 1  0
              0 -1|
roberts2 := | 0  1
             -1  0|
for p in poly {
    r1 := convolute(p, roberts1)
    r2 := convolute(p, roberts2)
    @p = hypot(r1, r2)
}
flip()

Gauss := gauss(2)
BlurLine := fn(line) {
    for dy in -3 .. 4 {
        for p in translate(line, 0;dy) {
            @p = convolute(p, Gauss)
        }
    }
}

prevPt := nil
for pt in poly.vertices {
    if prevPt != nil {
        plot(line(prevPt, pt), #ffffff)
    }
    prevPt = pt
}
plot(line(prevPt, poly.vertices[0]), #ffffff)
flip()

prevPt = nil
for pt in poly.vertices {
    if prevPt != nil {
        BlurLine(line(prevPt, pt))
    }
    prevPt = pt
}
BlurLine(line(prevPt, poly.vertices[0]))
